// ðŸ‘‰ Update the imports
import { clerkMiddleware, createRouteMatcher } from "@clerk/nextjs/server"
import { NextResponse } from "next/server"

const isProtectedRoute = createRouteMatcher([
  "/bookings(.*)",
  "/checkout(.*)",
  "/favorites(.*)",
  "/profile(.*)",
  "/rentals(.*)",
  "/reviews(.*)",
])

// ðŸ‘‰ Create a type to define the metadata
type UserMetadata = {
  hasProfile?: boolean
}

export default clerkMiddleware((auth, req) => {
  if (isProtectedRoute(req)) {
    auth().protect()

    // ðŸ‘‰ Use `auth()` to get the sessionClaims, which includes the public metadata
    const { sessionClaims } = auth()
    const { hasProfile } = sessionClaims?.metadata as UserMetadata
    if (!hasProfile) {
      // ðŸ‘‰ If the user is not a beta user, redirect them to the waitlist
      return NextResponse.redirect(new URL("/profile/create", req.url))
    }
  }
})

export const config = {
  matcher: [
    // Skip Next.js internals and all static files, unless found in search params
    "/((?!_next|[^?]*\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)",
    // Always run for API routes
    "/(api|trpc)(.*)",
  ],
}

